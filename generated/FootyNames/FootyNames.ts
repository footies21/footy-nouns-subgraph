// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ClubNamed extends ethereum.Event {
  get params(): ClubNamed__Params {
    return new ClubNamed__Params(this);
  }
}

export class ClubNamed__Params {
  _event: ClubNamed;

  constructor(event: ClubNamed) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class FootyNamed extends ethereum.Event {
  get params(): FootyNamed__Params {
    return new FootyNamed__Params(this);
  }
}

export class FootyNamed__Params {
  _event: FootyNamed;

  constructor(event: FootyNamed) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get name(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class FootyNames extends ethereum.SmartContract {
  static bind(address: Address): FootyNames {
    return new FootyNames("FootyNames", address);
  }

  clubNames(param0: Address): string {
    let result = super.call("clubNames", "clubNames(address):(string)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toString();
  }

  try_clubNames(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall("clubNames", "clubNames(address):(string)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  footyNames(param0: BigInt): string {
    let result = super.call("footyNames", "footyNames(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toString();
  }

  try_footyNames(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("footyNames", "footyNames(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getClubName(_address: Address): string {
    let result = super.call("getClubName", "getClubName(address):(string)", [
      ethereum.Value.fromAddress(_address)
    ]);

    return result[0].toString();
  }

  try_getClubName(_address: Address): ethereum.CallResult<string> {
    let result = super.tryCall("getClubName", "getClubName(address):(string)", [
      ethereum.Value.fromAddress(_address)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getFootyName(tokenId: BigInt): string {
    let result = super.call("getFootyName", "getFootyName(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toString();
  }

  try_getFootyName(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getFootyName",
      "getFootyName(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenContract(): Address {
    let result = super.call("tokenContract", "tokenContract():(address)", []);

    return result[0].toAddress();
  }

  try_tokenContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokenContract",
      "tokenContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _tokenContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class NameClubAndFootiesCall extends ethereum.Call {
  get inputs(): NameClubAndFootiesCall__Inputs {
    return new NameClubAndFootiesCall__Inputs(this);
  }

  get outputs(): NameClubAndFootiesCall__Outputs {
    return new NameClubAndFootiesCall__Outputs(this);
  }
}

export class NameClubAndFootiesCall__Inputs {
  _call: NameClubAndFootiesCall;

  constructor(call: NameClubAndFootiesCall) {
    this._call = call;
  }

  get newClubName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get newNames(): Array<string> {
    return this._call.inputValues[2].value.toStringArray();
  }
}

export class NameClubAndFootiesCall__Outputs {
  _call: NameClubAndFootiesCall;

  constructor(call: NameClubAndFootiesCall) {
    this._call = call;
  }
}
